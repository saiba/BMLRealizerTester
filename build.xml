<?xml version="1.0" encoding="UTF-8"?>
<project name="BMLRealizerTester"  default="compile">
	<property name="src" location="src"/>
	<property name="doc" location="docs"/>
	<property name="bml1utilssrc" location="utils/bml-1/src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>


             <!-- Settings for JUnit testing -->
   <property name="test.dir"               value="test"  />
   <property name="test.src.dir"           value="${test.dir}/src/" />
   <property name="test.lib.dir"           value="${test.dir}/lib/" />
   <property name="test.resource.dir"      value="${test.dir}/resource/" />
   <property name="test.report.dir"        value="${test.dir}/report" />
   <property name="build.test.classes.dir" location="test/build/classes" />
   <property name="build.test.results.dir" location="test/build/results" />
   <property name="junit.include"          value="**/*Test.class"/>
   <property name="junit.exclude"          value="**/Abstract*.class"/>

    <path id="junit-test-run-classpath">
      <fileset dir="lib">
        <include name="**/*.jar"/>
      </fileset>
      <pathelement path="${build}"/>
      <pathelement path="utils/bml-1/build"/>
      <pathelement location="${build.test.classes.dir}"/>
      <pathelement location="${resource.dir}"/>
      <pathelement location="${test.resource.dir}"/>
      <pathelement path="${resource.path}"/>
      <pathelement path="${test.resource.path}"/>
   </path>

  <target name="doc" description="generate javadoc">
	   <mkdir dir="docs"/>
	   <javadoc sourcepath="${src}:${bml1utilssrc}" destdir="${doc}"/>

  </target>

  <target name="compile-tests" depends="compile">
      <mkdir dir="${build.test.classes.dir}"/>
      <mkdir dir="${test.src.dir}"/>
      <javac srcdir="${test.src.dir}"
             destdir="${build.test.classes.dir}"
             includeAntRuntime="false"
             debug="true"
             deprecation="on"
             source="1.6"
             target="1.6"
      >
          <classpath>

      <fileset dir="lib">
        <include name="**/*.jar"/>
      </fileset>
      <pathelement path="${build}"/>
      <pathelement path="utils/bml-1/build"/>

    </classpath>

      </javac>
   </target>

   <target name="-junit" depends="compile-tests"  >
      <delete dir="${build.test.results.dir}" failonerror="false" quiet="true"/>
      <mkdir dir="${build.test.results.dir}"/>
      <junit printsummary="false"
           haltonfailure="false"
           fork="yes"  forkmode="perTest"  timeout="1000000"
           errorProperty="test.failed"
           failureProperty="test.failed">

         <classpath refid="junit-test-run-classpath"/>
         <sysproperty key="java.library.path" path="${test.library.path}"/>
         <formatter type="brief" usefile="false"/>
         <formatter type="xml"/>
         <batchtest todir="${build.test.results.dir}" >
            <fileset dir="${build.test.classes.dir}" >
		    <exclude name="**/*$*.class"/>
	<include name="${junit.include}"/>
               <exclude name="${junit.exclude}"/>
            </fileset>
         </batchtest>
      </junit>


   </target>

   <target name="junit-nofail" depends="-junit" description="Run all JUnit tests, do not fail on test failure"/>

   <target name="junit" depends="-junit" description="Run all JUnit tests">
      <fail if="test.failed">
         JUnit test(s) failed.
      </fail>
   </target>

   <target name="junitreport" depends="-junit" description="Run all JUnit tests and create an HTML report" >
      <delete dir="${test.report.dir}" failonerror="false"/>
      <mkdir dir="${test.report.dir}"/>
      <junitreport todir="${build.test.results.dir}" >
         <fileset dir="${build.test.results.dir}">
            <include name="TEST-*.xml"/>
         </fileset>
         <report format="frames" todir="${test.report.dir}"/>
      </junitreport>
   </target>
  <target name="compile" depends="init" description="compile the source " >
    <subant target="compile" genericantfile="build.xml">
      <fileset dir="utils" includes="*/build.xml"/>
    </subant>
	
	<!-- Compile the java code from ${src} into ${build} -->
    <javac debug="true" includeantruntime="false" 
	srcdir="${src}" destdir="${build}"
	source="1.6" target="1.6">
    <classpath>

      <fileset dir="lib">
        <include name="**/*.jar"/>
      </fileset>      
	  <pathelement path="utils/bml-1/build"/>
	  
    </classpath>
    </javac>
	
  </target>

 <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="dist" depends="compile, junit"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/realizertester.jar">
      <fileset dir="${build}"/>
      <fileset dir="${src}"/>
      <fileset dir="testcases"/>
	  <fileset file="license.txt"/>
    </jar>
	
	<subant target="dist" genericantfile="build.xml">
      <fileset dir="utils" includes="*/build.xml"/>
    </subant>
  </target>
  
  <target name="clean"
        description="clean up" >
		
	<subant target="clean" genericantfile="build.xml">
      <fileset dir="utils" includes="*/build.xml"/>
    </subant>
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

</project>
